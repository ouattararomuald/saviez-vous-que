// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  ext.buildConfig = [
    'compileSdk': 28,
    'minSdk': 18,
    'targetSdk' : 28,
  ]

  ext.versions = [
    'androidx': '1.0.0-beta01',
    'androidPlugin': '3.3.0',
    'arch': '2.0.0',
    'dagger': '2.19',
    'groupie': '2.3.0',
    'kotlin': '1.3.11',
    'nav': '1.0.0-alpha07',
    'paging': '2.1.0-beta01',
    'retrofit': '2.5.0',
    'room': '2.1.0-alpha03',
  ]

  ext.deps = [
    'android': [
      'arch': [
        'navigation': [
          'fragment': "android.arch.navigation:navigation-fragment-ktx:${versions.nav}",
          'ui': "android.arch.navigation:navigation-ui-ktx:${versions.nav}",
          'testing': "android.arch.navigation:navigation-testing:${versions.nav}",
        ],
      ],
    ],
    'androidx': [
      'appcompat': "androidx.appcompat:appcompat:${versions.androidx}",
      'constraintlayout': 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2',
      'legacy': "androidx.legacy:legacy-support-v4:${versions.androidx}",
      'material': "com.google.android.material:material:${versions.androidx}",
      'recyclerview': "androidx.recyclerview:recyclerview:${versions.androidx}",
      'annotation': "androidx.annotation:annotation:${versions.androidx}",
      'vectordrawable': "androidx.vectordrawable:vectordrawable:${versions.androidx}",
      'arch': [
        'lifecycle': [
          'extensions': "androidx.lifecycle:lifecycle-extensions:${versions.arch}",
          'java8': "androidx.lifecycle:lifecycle-common-java8:${versions.arch}",
          'reactivestreams': "androidx.lifecycle:lifecycle-reactivestreams:${versions.arch}",
        ],
        'core': [
          'ktx': 'androidx.core:core-ktx:1.0.1',
        ],
        'room': [
          'rxjava2': "androidx.room:room-rxjava2:${versions.room}",
          'runtime': "androidx.room:room-runtime:${versions.room}",
          'compiler': "androidx.room:room-compiler:${versions.room}",
          'testing': "androidx.room:room-testing:${versions.room}"
        ],
        'coreTesting': "androidx.arch.core:core-testing:${versions.arch}"
      ],
      'databinding': [
        'compiler': "androidx.databinding:databinding-compiler:${versions.androidPlugin}",
        'library': "androidx.databinding:databinding-runtime:${versions.androidPlugin}",
      ],
      'paging': [
        'runtime': "androidx.paging:paging-runtime-ktx:${versions.paging}",
        'rxjava2': "androidx.paging:paging-rxjava2-ktx:${versions.paging}",
        'testing': "androidx.paging:paging-common-ktx:${versions.paging}",
      ],
      'test': [
        'ext': [
          'junit': 'androidx.test.ext:junit:1.1.0-alpha01'
        ],
        'espresso': [
          'runner': 'androidx.test:runner:1.1.1-alpha01',
          'core': 'androidx.test.espresso:espresso-core:3.1.1-alpha01',
        ],
      ],
    ],
    'dagger': [
      'runtime': "com.google.dagger:dagger:${versions.dagger}",
      'compiler': "com.google.dagger:dagger-compiler:${versions.dagger}",
    ],
    'kotlin': [
      'stdlib': [
        'jdk8': "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}",
      ],
    ],
    'junit': 'junit:junit:4.12',
    'retrofit': [
      'mock': "com.squareup.retrofit2:retrofit-mock:${versions.retrofit}",
      'rxjavaCallAdapter': "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}",
      'gsonConverter': "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    ],
    'groupie': [
      'runtime': "com.xwray:groupie:${versions.groupie}",
      'extensions': "com.xwray:groupie-kotlin-android-extensions:${versions.groupie}",
      'databinding': "com.xwray:groupie-databinding:${versions.groupie}",
    ],
    'fresco': 'com.facebook.fresco:fresco:1.11.0',
    'gson': 'com.google.code.gson:gson:2.8.5',
    'rxAndroid': 'io.reactivex.rxjava2:rxandroid:2.1.0',
    'mockito': 'org.mockito:mockito-core:2.23.4',
    'stetho': 'com.facebook.stetho:stetho:1.5.0',
    'threetenabp': 'com.jakewharton.threetenabp:threetenabp:1.1.1',
    'truth': 'com.google.truth:truth:0.42',
    'jsr305': 'com.google.code.findbugs:jsr305:3.0.2',
  ]

  repositories {
    google()
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:${versions.androidPlugin}"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
    classpath "android.arch.navigation:navigation-safe-args-gradle-plugin:${versions.nav}"

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}

plugins {
  id 'io.gitlab.arturbosch.detekt' version '1.0.0.RC9.2'
  id 'com.github.ben-manes.versions' version '0.20.0'
}

allprojects {
  repositories {
    google()
    mavenCentral()
    jcenter()
  }
}

subprojects { project ->

  repositories {
    google()
    mavenCentral()
    jcenter()
  }

  task copyResourcesToClasses(type: Copy) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/intermediates/classes/test/debug/resources"
  }

  afterEvaluate {
    if (project.tasks.findByName('assembleDebug')) {
      assembleDebug.dependsOn(copyResourcesToClasses)
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

detekt {
  toolVersion = "1.0.0.RC9.2"
  input = files("$projectDir/app/src/main/java")
  config = files("$projectDir/code-analysis/detekt.yml")
  filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
}
