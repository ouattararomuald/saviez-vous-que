// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  ext.buildConfig = [
    'compileSdk': 29,
    'minSdk': 21,
    'targetSdk' : 29,
  ]

  ext.versions = [
    'androidPlugin': '4.0.0-alpha03',
    'coroutines': '1.3.2',
    'dagger': '2.25.2',
    'groupie': '2.7.0',
    'kotlin': '1.3.60-eap-25',
    'lifecycle': '2.2.0-rc01',
    'nav': '1.0.0',
    'paging': '2.1.0',
    'retrofit': '2.6.2',
    'room': '2.2.1', // https://developer.android.com/jetpack/androidx/releases/room#2.2.0-alpha01
    'sqlDelight': '1.2.0', // https://developer.android.com/jetpack/androidx/releases/room#2.2.0-alpha01
  ]

  ext.deps = [
    'androidx': [
      'appcompat': 'androidx.appcompat:appcompat:1.1.0',
      'constraintlayout': 'androidx.constraintlayout:constraintlayout:1.1.3',
      'legacy': 'androidx.legacy:legacy-support-v4:1.0.0',
      'material': 'com.google.android.material:material:1.2.0-alpha01',
      'recyclerview': 'androidx.recyclerview:recyclerview:1.1.0-rc01',
      'annotation': 'androidx.annotation:annotation:1.1.0',
      'vectordrawable': 'androidx.vectordrawable:vectordrawable:1.1.0',
      'arch': [
        'lifecycle': [
          'extensions': "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}",
          'java8': "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycle}",
          'reactivestreams': "androidx.lifecycle:lifecycle-reactivestreams:${versions.lifecycle}",
        ],
        'core': [
          'ktx': 'androidx.core:core-ktx:1.2.0-beta01',
        ],
        'room': [
          'runtime': "androidx.room:room-runtime:${versions.room}",
          'compiler': "androidx.room:room-compiler:${versions.room}",
          'rxjava2': "androidx.room:room-rxjava2:${versions.room}",
          'testing': "androidx.room:room-testing:${versions.room}"
        ],
        'coreTesting': 'androidx.arch.core:core-testing:2.0.0'
      ],
      'databinding': [
        'compiler': "androidx.databinding:databinding-compiler:${versions.androidPlugin}",
        'library': "androidx.databinding:databinding-runtime:${versions.androidPlugin}",
      ],
      'paging': [
        'runtime': "androidx.paging:paging-runtime-ktx:${versions.paging}",
        'rxjava2': "androidx.paging:paging-rxjava2-ktx:${versions.paging}",
        'testing': "androidx.paging:paging-common-ktx:${versions.paging}",
      ],
      'test': [
        'core': 'androidx.test:core:1.2.1-alpha02',
        'coreKtx': 'androidx.test:core-ktx:1.2.1-alpha02',
        'ext': [
          'junit': 'androidx.test.ext:junit:1.1.2-alpha02',
          'junitKtx': 'androidx.test.ext:junit-ktx:1.1.2-alpha02',
        ],
        'espresso': [
          'runner': 'androidx.test:runner:1.3.0-alpha02',
          'core': 'androidx.test.espresso:espresso-core:3.3.0-alpha02',
        ],
      ],
    ],
    'dagger': [
      'runtime': "com.google.dagger:dagger:${versions.dagger}",
      'compiler': "com.google.dagger:dagger-compiler:${versions.dagger}",
    ],
    'kotlin': [
      'stdlib': [
        'jdk8': "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}",
      ],
    ],
    'junit': 'junit:junit:4.13-beta-2',
    'retrofit': [
      'mock': "com.squareup.retrofit2:retrofit-mock:${versions.retrofit}",
      'rxjavaCallAdapter': "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}",
      'gsonConverter': "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    ],
    'groupie': [
      'runtime': "com.xwray:groupie:${versions.groupie}",
      'extensions': "com.xwray:groupie-kotlin-android-extensions:${versions.groupie}",
      'databinding': "com.xwray:groupie-databinding:${versions.groupie}",
    ],
    'coroutines': [
      'core': "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}",
      'test': "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}"
    ],
    'okhttp': 'com.squareup.okhttp3:okhttp:4.2.2',
    'picasso': 'com.squareup.picasso:picasso:2.71828',
    'gson': 'com.google.code.gson:gson:2.8.6',
    'rxAndroid': 'io.reactivex.rxjava2:rxandroid:2.1.1',
    'mockito': 'org.mockito:mockito-core:3.1.0',
    'stetho': 'com.facebook.stetho:stetho:1.5.1',
    'sqlDelight': [
      'driver': "com.squareup.sqldelight:android-driver:${versions.sqlDelight}",
      'rxjava': "com.squareup.sqldelight:rxjava2-extensions:${versions.sqlDelight}",
    ],
    'threetenabp': 'com.jakewharton.threetenabp:threetenabp:1.2.1',
    'truth': 'com.google.truth:truth:1.0',
    'jsr305': 'com.google.code.findbugs:jsr305:3.0.2',
    'robolectric': 'org.robolectric:robolectric:4.3.1',
  ]

  repositories {
    google()
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    jcenter()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:${versions.androidPlugin}"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
    classpath "android.arch.navigation:navigation-safe-args-gradle-plugin:${versions.nav}"
    classpath 'com.squareup.sqldelight:gradle-plugin:1.2.0'

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}

plugins {
  //id 'io.gitlab.arturbosch.detekt' version '1.0.0.RC9.2'
  id 'com.github.ben-manes.versions' version '0.21.0'
}

allprojects {
  repositories {
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    google()
    jcenter()
  }
}

subprojects { project ->

  repositories {
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    google()
    jcenter()
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
      freeCompilerArgs += '-Xuse-experimental=kotlin.Experimental'
      jvmTarget = '1.8'
    }
  }

  task copyResourcesToClasses(type: Copy) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/intermediates/classes/test/debug/resources"
  }

  afterEvaluate {
    if (project.tasks.findByName('assembleDebug')) {
      assembleDebug.dependsOn(copyResourcesToClasses)
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

//detekt {
//  toolVersion = "1.0.0.RC9.2"
//  input = files("$projectDir/app/src/main/java")
//  config = files("$projectDir/code-analysis/detekt.yml")
//  filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
//}
